#pragma OPENCL EXTENSION cl_viv_vx_extension : enable

#include "cl_viv_vx_ext.h"

_viv_uniform VXC_512Bits uniSobel3x3Vert1stRowA_8x4;
_viv_uniform VXC_512Bits uniSobel3x3Vert1stRowB_8x4;
_viv_uniform VXC_512Bits uniSobel3x3Vert1stRowC_8x4;
_viv_uniform VXC_512Bits uniSobel3x3Vert1stRowD_8x4;
_viv_uniform VXC_512Bits uniSobel3x3Hor1stRow_8x4;
_viv_uniform VXC_512Bits uniSobel3x3Hor1stRowB_8x4;
_viv_uniform VXC_512Bits uniSobel3x3Hor1stRowC_8x4;
_viv_uniform VXC_512Bits uniSobel3x3Hor1stRowD_8x4;
_viv_uniform VXC_512Bits uniSobel3x3VertA_4x8;
_viv_uniform VXC_512Bits uniSobel3x3VertB_4x8;
_viv_uniform VXC_512Bits uniSobel3x3VertC_4x8;
_viv_uniform VXC_512Bits uniSobel3x3VertD_4x8;
_viv_uniform VXC_512Bits uniSobel3x3HorA_8x4;
_viv_uniform VXC_512Bits uniSobel3x3HorB_8x4;
_viv_uniform VXC_512Bits uniSobel3x3HorC_8x4;
_viv_uniform VXC_512Bits uniSobel3x3HorD_8x4;
_viv_uniform int height;

#if (VX_VERSION==1)
__kernel void sobel_3x3_xy(
        __read_only  image2d_t input,
        __write_only image2d_t output_x,
         __write_only image2d_t output_y)
{
    int2 coord = (int2)(get_global_id(0), get_global_id(1));
    int2 coord_out = (int2)(get_global_id(0), get_global_id(1));
    vxc_uchar16 src0, src1, src2;
    vxc_short8 grad_x, grad_y;
    VXC_ReadImage(src0, input, coord, VXC_5BITOFFSET_XY(-1, -1), VXC_MODIFIER(0, 7, 0, VXC_RM_TowardZero, 0));
    VXC_ReadImage(src1, input, coord, VXC_5BITOFFSET_XY(-1, 0), VXC_MODIFIER(0, 7, 0, VXC_RM_TowardZero, 0));
    VXC_ReadImage(src2, input, coord, VXC_5BITOFFSET_XY(-1, 1), VXC_MODIFIER(0, 7, 0, VXC_RM_TowardZero, 0));

    VXC_Filter(grad_x, src0, src1, src2, VXC_MODIFIER_FILTER(0, 5, 0, VXC_FM_SobelX, 1));
    VXC_Filter(grad_y, src0, src1, src2, VXC_MODIFIER_FILTER(0, 5, 0, VXC_FM_SobelY, 1));
    VXC_WriteImage(output_x, coord_out, grad_x, VXC_MODIFIER(0, 5, 0, VXC_RM_TowardZero, 0));
    VXC_WriteImage(output_y, coord_out, grad_y, VXC_MODIFIER(0, 5, 0, VXC_RM_TowardZero, 0));

    for(coord_out.y = 1; coord_out.y < height;)
    {
        VXC_ReadImage(src0, input, coord, VXC_5BITOFFSET_XY(-1, 2), VXC_MODIFIER(0, 7, 0, VXC_RM_TowardZero, 0));
        VXC_Filter(grad_x, src1, src2, src0, VXC_MODIFIER_FILTER(0, 5, 0, VXC_FM_SobelX, 1));
        VXC_Filter(grad_y, src1, src2, src0, VXC_MODIFIER_FILTER(0, 5, 0, VXC_FM_SobelY, 1));
        VXC_WriteImage(output_x, coord_out, grad_x, VXC_MODIFIER(0, 5, 0, VXC_RM_TowardZero, 0));
        VXC_WriteImage(output_y, coord_out, grad_y, VXC_MODIFIER(0, 5, 0, VXC_RM_TowardZero, 0));

        VXC_ReadImage(src1, input, coord, VXC_5BITOFFSET_XY(-1, 3), VXC_MODIFIER(0, 7, 0, VXC_RM_TowardZero, 0));
        coord_out.y++;
        VXC_Filter(grad_x, src2, src0, src1, VXC_MODIFIER_FILTER(0, 5, 0, VXC_FM_SobelX, 1));
        VXC_Filter(grad_y, src2, src0, src1, VXC_MODIFIER_FILTER(0, 5, 0, VXC_FM_SobelY, 1));
        VXC_WriteImage(output_x, coord_out, grad_x, VXC_MODIFIER(0, 5, 0, VXC_RM_TowardZero, 0));
        VXC_WriteImage(output_y, coord_out, grad_y, VXC_MODIFIER(0, 5, 0, VXC_RM_TowardZero, 0));

        VXC_ReadImage(src2, input, coord, VXC_5BITOFFSET_XY(-1, 4), VXC_MODIFIER(0, 7, 0, VXC_RM_TowardZero, 0));
        coord_out.y++;
        coord.y+=3;
        VXC_Filter(grad_x, src0, src1, src2, VXC_MODIFIER_FILTER(0, 5, 0, VXC_FM_SobelX, 1));
        VXC_Filter(grad_y, src0, src1, src2, VXC_MODIFIER_FILTER(0, 5, 0, VXC_FM_SobelY, 1));
        VXC_WriteImage(output_x, coord_out, grad_x, VXC_MODIFIER(0, 5, 0, VXC_RM_TowardZero, 0));
        VXC_WriteImage(output_y, coord_out, grad_y, VXC_MODIFIER(0, 5, 0, VXC_RM_TowardZero, 0));
        coord_out.y++;
    }
}

__kernel void sobel_3x3_x(
        __read_only  image2d_t input,
        __write_only image2d_t output_x,
         __write_only image2d_t output_y)
{
    int2 coord = (int2)(get_global_id(0), get_global_id(1));
    int2 coord_out = (int2)(get_global_id(0), get_global_id(1));
    vxc_uchar16 src0, src1, src2;
    vxc_short8 grad_x;
    VXC_ReadImage(src0, input, coord, VXC_5BITOFFSET_XY(-1, -1), VXC_MODIFIER(0, 7, 0, VXC_RM_TowardZero, 0));
    VXC_ReadImage(src1, input, coord, VXC_5BITOFFSET_XY(-1, 0), VXC_MODIFIER(0, 7, 0, VXC_RM_TowardZero, 0));
    VXC_ReadImage(src2, input, coord, VXC_5BITOFFSET_XY(-1, 1), VXC_MODIFIER(0, 7, 0, VXC_RM_TowardZero, 0));

    VXC_Filter(grad_x, src0, src1, src2, VXC_MODIFIER_FILTER(0, 5, 0, VXC_FM_SobelX, 1));
    VXC_WriteImage(output_x, coord_out, grad_x, VXC_MODIFIER(0, 5, 0, VXC_RM_TowardZero, 0));

    for(coord_out.y = 1; coord_out.y < height;)
    {
        VXC_ReadImage(src0, input, coord, VXC_5BITOFFSET_XY(-1, 2), VXC_MODIFIER(0, 7, 0, VXC_RM_TowardZero, 0));
        VXC_Filter(grad_x, src1, src2, src0, VXC_MODIFIER_FILTER(0, 5, 0, VXC_FM_SobelX, 1));
        VXC_WriteImage(output_x, coord_out, grad_x, VXC_MODIFIER(0, 5, 0, VXC_RM_TowardZero, 0));

        VXC_ReadImage(src1, input, coord, VXC_5BITOFFSET_XY(-1, 3), VXC_MODIFIER(0, 7, 0, VXC_RM_TowardZero, 0));
        coord_out.y++;
        VXC_Filter(grad_x, src2, src0, src1, VXC_MODIFIER_FILTER(0, 5, 0, VXC_FM_SobelX, 1));
        VXC_WriteImage(output_x, coord_out, grad_x, VXC_MODIFIER(0, 5, 0, VXC_RM_TowardZero, 0));

        VXC_ReadImage(src2, input, coord, VXC_5BITOFFSET_XY(-1, 4), VXC_MODIFIER(0, 7, 0, VXC_RM_TowardZero, 0));
        coord_out.y++;
        coord.y+=3;
        VXC_Filter(grad_x, src0, src1, src2, VXC_MODIFIER_FILTER(0, 5, 0, VXC_FM_SobelX, 1));
        VXC_WriteImage(output_x, coord_out, grad_x, VXC_MODIFIER(0, 5, 0, VXC_RM_TowardZero, 0));
        coord_out.y++;
    }
}

__kernel void sobel_3x3_y(
        __read_only  image2d_t input,
        __write_only image2d_t output_x,
         __write_only image2d_t output_y)
{
    int2 coord = (int2)(get_global_id(0), get_global_id(1));
    int2 coord_out = (int2)(get_global_id(0), get_global_id(1));
    vxc_uchar16 src0, src1, src2;
    vxc_short8 grad_y;
    VXC_ReadImage(src0, input, coord, VXC_5BITOFFSET_XY(-1, -1), VXC_MODIFIER(0, 7, 0, VXC_RM_TowardZero, 0));
    VXC_ReadImage(src1, input, coord, VXC_5BITOFFSET_XY(-1, 0), VXC_MODIFIER(0, 7, 0, VXC_RM_TowardZero, 0));
    VXC_ReadImage(src2, input, coord, VXC_5BITOFFSET_XY(-1, 1), VXC_MODIFIER(0, 7, 0, VXC_RM_TowardZero, 0));

    VXC_Filter(grad_y, src0, src1, src2, VXC_MODIFIER_FILTER(0, 5, 0, VXC_FM_SobelY, 1));
    VXC_WriteImage(output_y, coord_out, grad_y, VXC_MODIFIER(0, 5, 0, VXC_RM_TowardZero, 0));

    for(coord_out.y = 1; coord_out.y < height;)
    {
        VXC_ReadImage(src0, input, coord, VXC_5BITOFFSET_XY(-1, 2), VXC_MODIFIER(0, 7, 0, VXC_RM_TowardZero, 0));
        VXC_Filter(grad_y, src1, src2, src0, VXC_MODIFIER_FILTER(0, 5, 0, VXC_FM_SobelY, 1));
        VXC_WriteImage(output_y, coord_out, grad_y, VXC_MODIFIER(0, 5, 0, VXC_RM_TowardZero, 0));

        VXC_ReadImage(src1, input, coord, VXC_5BITOFFSET_XY(-1, 3), VXC_MODIFIER(0, 7, 0, VXC_RM_TowardZero, 0));
        coord_out.y++;
        VXC_Filter(grad_y, src2, src0, src1, VXC_MODIFIER_FILTER(0, 5, 0, VXC_FM_SobelY, 1));
        VXC_WriteImage(output_y, coord_out, grad_y, VXC_MODIFIER(0, 5, 0, VXC_RM_TowardZero, 0));

        VXC_ReadImage(src2, input, coord, VXC_5BITOFFSET_XY(-1, 4), VXC_MODIFIER(0, 7, 0, VXC_RM_TowardZero, 0));
        coord_out.y++;
        coord.y+=3;
        VXC_Filter(grad_y, src0, src1, src2, VXC_MODIFIER_FILTER(0, 5, 0, VXC_FM_SobelY, 1));
        VXC_WriteImage(output_y, coord_out, grad_y, VXC_MODIFIER(0, 5, 0, VXC_RM_TowardZero, 0));
        coord_out.y++;
    }
}
#else
__kernel void sobel_3x3_xy(
        __read_only  image2d_t input,
        __write_only image2d_t output_x,
         __write_only image2d_t output_y)
{
    int2 coord = (int2)(get_global_id(0), get_global_id(1));
    int4 coord_out = (int4)(get_global_id(0), get_global_id(1), get_global_id(0) + 8, get_global_id(1));
    vxc_uchar16 src0, src1, src2;
    vxc_short8 grad_x0, grad_x1, grad_y0, grad_y1;
    vxc_short8 dst_x0, dst_x1;
    vxc_short8 tmpX0, tmpX1;
    //VXC_ReadImage(src0, input, coord, VXC_5BITOFFSET_XY(-1, -1), VXC_MODIFIER(0, 15, 0, VXC_RM_TowardZero, 0));
    VXC_ReadImage(src1, input, coord, VXC_5BITOFFSET_XY(-1, 0), VXC_MODIFIER(0, 15, 0, VXC_RM_TowardZero, 0));
    VXC_ReadImage(src2, input, coord, VXC_5BITOFFSET_XY(-1, 1), VXC_MODIFIER(0, 15, 0, VXC_RM_TowardZero, 0));

    VXC_DP8x4(grad_x0, src1, src2, VXC_MODIFIER(0, 3, 0, VXC_RM_TowardZero, 0), uniSobel3x3Vert1stRowA_8x4);
    VXC_DP8x4(grad_x0, src1, src2, VXC_MODIFIER(4, 7, 0, VXC_RM_TowardZero, 0), uniSobel3x3Vert1stRowB_8x4);
    VXC_DP8x4(grad_x1, src1, src2, VXC_MODIFIER(0, 3, 0, VXC_RM_TowardZero, 0), uniSobel3x3Vert1stRowC_8x4);
    VXC_DP8x4(grad_x1, src1, src2, VXC_MODIFIER(4, 5, 0, VXC_RM_TowardZero, 0), uniSobel3x3Vert1stRowD_8x4);
    VXC_DP8x4(grad_y0, src1, src2, VXC_MODIFIER(0, 3, 0, VXC_RM_TowardZero, 0), uniSobel3x3Hor1stRow_8x4);
    VXC_DP8x4(grad_y0, src1, src2, VXC_MODIFIER(4, 7, 0, VXC_RM_TowardZero, 0), uniSobel3x3Hor1stRowB_8x4);
    VXC_DP8x4(grad_y1, src1, src2, VXC_MODIFIER(0, 3, 0, VXC_RM_TowardZero, 0), uniSobel3x3Hor1stRowC_8x4);
    VXC_DP8x4(grad_y1, src1, src2, VXC_MODIFIER(4, 7, 0, VXC_RM_TowardZero, 0), uniSobel3x3Hor1stRowD_8x4);
    VXC_WriteImage(output_x, coord_out.xy, grad_x0, VXC_MODIFIER(0, 7, 0, VXC_RM_TowardZero, 0));
    VXC_WriteImage(output_x, coord_out.zy, grad_x1, VXC_MODIFIER(0, 5, 0, VXC_RM_TowardZero, 0));
    VXC_WriteImage(output_y, coord_out.xy, grad_y0, VXC_MODIFIER(0, 7, 0, VXC_RM_TowardZero, 0));
    VXC_WriteImage(output_y, coord_out.zy, grad_y1, VXC_MODIFIER(0, 5, 0, VXC_RM_TowardZero, 0));

    for(coord_out.y = 1; coord_out.y < height;)
    {
        VXC_ReadImage(src0, input, coord, VXC_5BITOFFSET_XY(-1, 2), VXC_MODIFIER(0, 15, 0, VXC_RM_TowardZero, 0));
        VXC_DP4x8(grad_x0, src1, src2, VXC_MODIFIER(0, 7, 0, VXC_RM_TowardZero, 0), uniSobel3x3VertA_4x8);
        VXC_DP4x8(grad_x1, src1, src2, VXC_MODIFIER(0, 5, 0, VXC_RM_TowardZero, 0), uniSobel3x3VertB_4x8);
        VXC_DP4x8(dst_x0, src0, grad_x0, VXC_MODIFIER(0, 7, 0, VXC_RM_TowardZero, 1), uniSobel3x3VertC_4x8);
        VXC_DP4x8(dst_x1, src0, grad_x1, VXC_MODIFIER(0, 5, 0, VXC_RM_TowardZero, 1), uniSobel3x3VertD_4x8);
        VXC_DP8x4(grad_y0, src1, src0, VXC_MODIFIER(0, 3, 0, VXC_RM_TowardZero, 1), uniSobel3x3HorA_8x4);
        VXC_DP8x4(grad_y0, src1, src0, VXC_MODIFIER(4, 7, 0, VXC_RM_TowardZero, 1), uniSobel3x3HorB_8x4);
        VXC_DP8x4(grad_y1, src1, src0, VXC_MODIFIER(0, 3, 0, VXC_RM_TowardZero, 1), uniSobel3x3HorC_8x4);
        VXC_DP8x4(grad_y1, src1, src0, VXC_MODIFIER(4, 5, 0, VXC_RM_TowardZero, 1), uniSobel3x3HorD_8x4);
        VXC_WriteImage(output_x, coord_out.xy, dst_x0, VXC_MODIFIER(0, 7, 0, VXC_RM_TowardZero, 0));
        VXC_WriteImage(output_x, coord_out.zy, dst_x1, VXC_MODIFIER(0, 5, 0, VXC_RM_TowardZero, 0));
        VXC_WriteImage(output_y, coord_out.xy, grad_y0, VXC_MODIFIER(0, 7, 0, VXC_RM_TowardZero, 0));
        VXC_WriteImage(output_y, coord_out.zy, grad_y1, VXC_MODIFIER(0, 5, 0, VXC_RM_TowardZero, 0));

        VXC_ReadImage(src1, input, coord, VXC_5BITOFFSET_XY(-1, 3), VXC_MODIFIER(0, 15, 0, VXC_RM_TowardZero, 0));
        coord_out.y++;
        VXC_DP4x8(grad_x0, src2, src0, VXC_MODIFIER(0, 7, 0, VXC_RM_TowardZero, 0), uniSobel3x3VertA_4x8);
        VXC_DP4x8(grad_x1, src2, src0, VXC_MODIFIER(0, 5, 0, VXC_RM_TowardZero, 0), uniSobel3x3VertB_4x8);
        VXC_DP4x8(dst_x0, src1, grad_x0, VXC_MODIFIER(0, 7, 0, VXC_RM_TowardZero, 1), uniSobel3x3VertC_4x8);
        VXC_DP4x8(dst_x1, src1, grad_x1, VXC_MODIFIER(0, 5, 0, VXC_RM_TowardZero, 1), uniSobel3x3VertD_4x8);
        VXC_DP8x4(grad_y0, src2, src1, VXC_MODIFIER(0, 3, 0, VXC_RM_TowardZero, 1), uniSobel3x3HorA_8x4);
        VXC_DP8x4(grad_y0, src2, src1, VXC_MODIFIER(4, 7, 0, VXC_RM_TowardZero, 1), uniSobel3x3HorB_8x4);
        VXC_DP8x4(grad_y1, src2, src1, VXC_MODIFIER(0, 3, 0, VXC_RM_TowardZero, 1), uniSobel3x3HorC_8x4);
        VXC_DP8x4(grad_y1, src2, src1, VXC_MODIFIER(4, 5, 0, VXC_RM_TowardZero, 1), uniSobel3x3HorD_8x4);
        VXC_WriteImage(output_x, coord_out.xy, dst_x0, VXC_MODIFIER(0, 7, 0, VXC_RM_TowardZero, 0));
        VXC_WriteImage(output_x, coord_out.zy, dst_x1, VXC_MODIFIER(0, 5, 0, VXC_RM_TowardZero, 0));
        VXC_WriteImage(output_y, coord_out.xy, grad_y0, VXC_MODIFIER(0, 7, 0, VXC_RM_TowardZero, 0));
        VXC_WriteImage(output_y, coord_out.zy, grad_y1, VXC_MODIFIER(0, 5, 0, VXC_RM_TowardZero, 0));

        VXC_ReadImage(src2, input, coord, VXC_5BITOFFSET_XY(-1, 4), VXC_MODIFIER(0, 15, 0, VXC_RM_TowardZero, 0));
        coord_out.y++;
        coord.y+=3;
        VXC_DP4x8(grad_x0, src0, src1, VXC_MODIFIER(0, 7, 0, VXC_RM_TowardZero, 0), uniSobel3x3VertA_4x8);
        VXC_DP4x8(grad_x1, src0, src1, VXC_MODIFIER(0, 5, 0, VXC_RM_TowardZero, 0), uniSobel3x3VertB_4x8);
        VXC_DP4x8(dst_x0, src2, grad_x0, VXC_MODIFIER(0, 7, 0, VXC_RM_TowardZero, 1), uniSobel3x3VertC_4x8);
        VXC_DP4x8(dst_x1, src2, grad_x1, VXC_MODIFIER(0, 5, 0, VXC_RM_TowardZero, 1), uniSobel3x3VertD_4x8);
        VXC_DP8x4(grad_y0, src0, src2, VXC_MODIFIER(0, 3, 0, VXC_RM_TowardZero, 1), uniSobel3x3HorA_8x4);
        VXC_DP8x4(grad_y0, src0, src2, VXC_MODIFIER(4, 7, 0, VXC_RM_TowardZero, 1), uniSobel3x3HorB_8x4);
        VXC_DP8x4(grad_y1, src0, src2, VXC_MODIFIER(0, 3, 0, VXC_RM_TowardZero, 1), uniSobel3x3HorC_8x4);
        VXC_DP8x4(grad_y1, src0, src2, VXC_MODIFIER(4, 5, 0, VXC_RM_TowardZero, 1), uniSobel3x3HorD_8x4);
        VXC_WriteImage(output_x, coord_out.xy, dst_x0, VXC_MODIFIER(0, 7, 0, VXC_RM_TowardZero, 0));
        VXC_WriteImage(output_x, coord_out.zy, dst_x1, VXC_MODIFIER(0, 5, 0, VXC_RM_TowardZero, 0));
        VXC_WriteImage(output_y, coord_out.xy, grad_y0, VXC_MODIFIER(0, 7, 0, VXC_RM_TowardZero, 0));
        VXC_WriteImage(output_y, coord_out.zy, grad_y1, VXC_MODIFIER(0, 5, 0, VXC_RM_TowardZero, 0));
        coord_out.y++;
    }
}

__kernel void sobel_3x3_x(
        __read_only  image2d_t input,
        __write_only image2d_t output_x,
         __write_only image2d_t output_y)
{
    int2 coord = (int2)(get_global_id(0), get_global_id(1));
    int4 coord_out = (int4)(get_global_id(0), get_global_id(1), get_global_id(0) + 8, get_global_id(1));
    vxc_uchar16 src0, src1, src2;
    vxc_short8 grad_x0, grad_x1;
    vxc_short8 dst_x0, dst_x1;
    vxc_short8 tmpX0, tmpX1;
    //VXC_ReadImage(src0, input, coord, VXC_5BITOFFSET_XY(-1, -1), VXC_MODIFIER(0, 15, 0, VXC_RM_TowardZero, 0));
    VXC_ReadImage(src1, input, coord, VXC_5BITOFFSET_XY(-1, 0), VXC_MODIFIER(0, 15, 0, VXC_RM_TowardZero, 0));
    VXC_ReadImage(src2, input, coord, VXC_5BITOFFSET_XY(-1, 1), VXC_MODIFIER(0, 15, 0, VXC_RM_TowardZero, 0));

    VXC_DP8x4(grad_x0, src1, src2, VXC_MODIFIER(0, 3, 0, VXC_RM_TowardZero, 0), uniSobel3x3Vert1stRowA_8x4);
    VXC_DP8x4(grad_x0, src1, src2, VXC_MODIFIER(4, 7, 0, VXC_RM_TowardZero, 0), uniSobel3x3Vert1stRowB_8x4);
    VXC_DP8x4(grad_x1, src1, src2, VXC_MODIFIER(0, 3, 0, VXC_RM_TowardZero, 0), uniSobel3x3Vert1stRowC_8x4);
    VXC_DP8x4(grad_x1, src1, src2, VXC_MODIFIER(4, 5, 0, VXC_RM_TowardZero, 0), uniSobel3x3Vert1stRowD_8x4);
    VXC_WriteImage(output_x, coord_out.xy, grad_x0, VXC_MODIFIER(0, 7, 0, VXC_RM_TowardZero, 0));
    VXC_WriteImage(output_x, coord_out.zy, grad_x1, VXC_MODIFIER(0, 5, 0, VXC_RM_TowardZero, 0));

    for(coord_out.y = 1; coord_out.y < height;)
    {
        VXC_ReadImage(src0, input, coord, VXC_5BITOFFSET_XY(-1, 2), VXC_MODIFIER(0, 15, 0, VXC_RM_TowardZero, 0));
        VXC_DP4x8(grad_x0, src1, src2, VXC_MODIFIER(0, 7, 0, VXC_RM_TowardZero, 0), uniSobel3x3VertA_4x8);
        VXC_DP4x8(grad_x1, src1, src2, VXC_MODIFIER(0, 5, 0, VXC_RM_TowardZero, 0), uniSobel3x3VertB_4x8);
        VXC_DP4x8(dst_x0, src0, grad_x0, VXC_MODIFIER(0, 7, 0, VXC_RM_TowardZero, 1), uniSobel3x3VertC_4x8);
        VXC_DP4x8(dst_x1, src0, grad_x1, VXC_MODIFIER(0, 5, 0, VXC_RM_TowardZero, 1), uniSobel3x3VertD_4x8);
        VXC_WriteImage(output_x, coord_out.xy, dst_x0, VXC_MODIFIER(0, 7, 0, VXC_RM_TowardZero, 0));
        VXC_WriteImage(output_x, coord_out.zy, dst_x1, VXC_MODIFIER(0, 5, 0, VXC_RM_TowardZero, 0));

        VXC_ReadImage(src1, input, coord, VXC_5BITOFFSET_XY(-1, 3), VXC_MODIFIER(0, 15, 0, VXC_RM_TowardZero, 0));
        coord_out.y++;
        VXC_DP4x8(grad_x0, src2, src0, VXC_MODIFIER(0, 7, 0, VXC_RM_TowardZero, 0), uniSobel3x3VertA_4x8);
        VXC_DP4x8(grad_x1, src2, src0, VXC_MODIFIER(0, 5, 0, VXC_RM_TowardZero, 0), uniSobel3x3VertB_4x8);
        VXC_DP4x8(dst_x0, src1, grad_x0, VXC_MODIFIER(0, 7, 0, VXC_RM_TowardZero, 1), uniSobel3x3VertC_4x8);
        VXC_DP4x8(dst_x1, src1, grad_x1, VXC_MODIFIER(0, 5, 0, VXC_RM_TowardZero, 1), uniSobel3x3VertD_4x8);
        VXC_WriteImage(output_x, coord_out.xy, dst_x0, VXC_MODIFIER(0, 7, 0, VXC_RM_TowardZero, 0));
        VXC_WriteImage(output_x, coord_out.zy, dst_x1, VXC_MODIFIER(0, 5, 0, VXC_RM_TowardZero, 0));

        VXC_ReadImage(src2, input, coord, VXC_5BITOFFSET_XY(-1, 4), VXC_MODIFIER(0, 15, 0, VXC_RM_TowardZero, 0));
        coord_out.y++;
        coord.y+=3;
        VXC_DP4x8(grad_x0, src0, src1, VXC_MODIFIER(0, 7, 0, VXC_RM_TowardZero, 0), uniSobel3x3VertA_4x8);
        VXC_DP4x8(grad_x1, src0, src1, VXC_MODIFIER(0, 5, 0, VXC_RM_TowardZero, 0), uniSobel3x3VertB_4x8);
        VXC_DP4x8(dst_x0, src2, grad_x0, VXC_MODIFIER(0, 7, 0, VXC_RM_TowardZero, 1), uniSobel3x3VertC_4x8);
        VXC_DP4x8(dst_x1, src2, grad_x1, VXC_MODIFIER(0, 5, 0, VXC_RM_TowardZero, 1), uniSobel3x3VertD_4x8);
        VXC_WriteImage(output_x, coord_out.xy, dst_x0, VXC_MODIFIER(0, 7, 0, VXC_RM_TowardZero, 0));
        VXC_WriteImage(output_x, coord_out.zy, dst_x1, VXC_MODIFIER(0, 5, 0, VXC_RM_TowardZero, 0));
        coord_out.y++;
    }
}

__kernel void sobel_3x3_y(
        __read_only  image2d_t input,
        __write_only image2d_t output_x,
         __write_only image2d_t output_y)
{
    int2 coord = (int2)(get_global_id(0), get_global_id(1));
    int4 coord_out = (int4)(get_global_id(0), get_global_id(1), get_global_id(0) + 8, get_global_id(1));
    vxc_uchar16 src0, src1, src2;
    vxc_short8 grad_y0, grad_y1;
    //VXC_ReadImage(src0, input, coord, VXC_5BITOFFSET_XY(-1, -1), VXC_MODIFIER(0, 15, 0, VXC_RM_TowardZero, 0));
    VXC_ReadImage(src1, input, coord, VXC_5BITOFFSET_XY(-1, 0), VXC_MODIFIER(0, 15, 0, VXC_RM_TowardZero, 0));
    VXC_ReadImage(src2, input, coord, VXC_5BITOFFSET_XY(-1, 1), VXC_MODIFIER(0, 15, 0, VXC_RM_TowardZero, 0));

    VXC_DP8x4(grad_y0, src1, src2, VXC_MODIFIER(0, 3, 0, VXC_RM_TowardZero, 0), uniSobel3x3Hor1stRow_8x4);
    VXC_DP8x4(grad_y0, src1, src2, VXC_MODIFIER(4, 7, 0, VXC_RM_TowardZero, 0), uniSobel3x3Hor1stRowB_8x4);
    VXC_DP8x4(grad_y1, src1, src2, VXC_MODIFIER(0, 3, 0, VXC_RM_TowardZero, 0), uniSobel3x3Hor1stRowC_8x4);
    VXC_DP8x4(grad_y1, src1, src2, VXC_MODIFIER(4, 7, 0, VXC_RM_TowardZero, 0), uniSobel3x3Hor1stRowD_8x4);
    VXC_WriteImage(output_y, coord_out.xy, grad_y0, VXC_MODIFIER(0, 7, 0, VXC_RM_TowardZero, 0));
    VXC_WriteImage(output_y, coord_out.zy, grad_y1, VXC_MODIFIER(0, 5, 0, VXC_RM_TowardZero, 0));

    for(coord_out.y = 1; coord_out.y < height;)
    {
        VXC_ReadImage(src0, input, coord, VXC_5BITOFFSET_XY(-1, 2), VXC_MODIFIER(0, 15, 0, VXC_RM_TowardZero, 0));
        VXC_DP8x4(grad_y0, src1, src0, VXC_MODIFIER(0, 3, 0, VXC_RM_TowardZero, 1), uniSobel3x3HorA_8x4);
        VXC_DP8x4(grad_y0, src1, src0, VXC_MODIFIER(4, 7, 0, VXC_RM_TowardZero, 1), uniSobel3x3HorB_8x4);
        VXC_DP8x4(grad_y1, src1, src0, VXC_MODIFIER(0, 3, 0, VXC_RM_TowardZero, 1), uniSobel3x3HorC_8x4);
        VXC_DP8x4(grad_y1, src1, src0, VXC_MODIFIER(4, 5, 0, VXC_RM_TowardZero, 1), uniSobel3x3HorD_8x4);
        VXC_WriteImage(output_y, coord_out.xy, grad_y0, VXC_MODIFIER(0, 7, 0, VXC_RM_TowardZero, 0));
        VXC_WriteImage(output_y, coord_out.zy, grad_y1, VXC_MODIFIER(0, 5, 0, VXC_RM_TowardZero, 0));

        VXC_ReadImage(src1, input, coord, VXC_5BITOFFSET_XY(-1, 3), VXC_MODIFIER(0, 15, 0, VXC_RM_TowardZero, 0));
        coord_out.y++;
        VXC_DP8x4(grad_y0, src2, src1, VXC_MODIFIER(0, 3, 0, VXC_RM_TowardZero, 1), uniSobel3x3HorA_8x4);
        VXC_DP8x4(grad_y0, src2, src1, VXC_MODIFIER(4, 7, 0, VXC_RM_TowardZero, 1), uniSobel3x3HorB_8x4);
        VXC_DP8x4(grad_y1, src2, src1, VXC_MODIFIER(0, 3, 0, VXC_RM_TowardZero, 1), uniSobel3x3HorC_8x4);
        VXC_DP8x4(grad_y1, src2, src1, VXC_MODIFIER(4, 5, 0, VXC_RM_TowardZero, 1), uniSobel3x3HorD_8x4);
        VXC_WriteImage(output_y, coord_out.xy, grad_y0, VXC_MODIFIER(0, 7, 0, VXC_RM_TowardZero, 0));
        VXC_WriteImage(output_y, coord_out.zy, grad_y1, VXC_MODIFIER(0, 5, 0, VXC_RM_TowardZero, 0));

        VXC_ReadImage(src2, input, coord, VXC_5BITOFFSET_XY(-1, 4), VXC_MODIFIER(0, 15, 0, VXC_RM_TowardZero, 0));
        coord_out.y++;
        coord.y+=3;
        VXC_DP8x4(grad_y0, src0, src2, VXC_MODIFIER(0, 3, 0, VXC_RM_TowardZero, 1), uniSobel3x3HorA_8x4);
        VXC_DP8x4(grad_y0, src0, src2, VXC_MODIFIER(4, 7, 0, VXC_RM_TowardZero, 1), uniSobel3x3HorB_8x4);
        VXC_DP8x4(grad_y1, src0, src2, VXC_MODIFIER(0, 3, 0, VXC_RM_TowardZero, 1), uniSobel3x3HorC_8x4);
        VXC_DP8x4(grad_y1, src0, src2, VXC_MODIFIER(4, 5, 0, VXC_RM_TowardZero, 1), uniSobel3x3HorD_8x4);
        VXC_WriteImage(output_y, coord_out.xy, grad_y0, VXC_MODIFIER(0, 7, 0, VXC_RM_TowardZero, 0));
        VXC_WriteImage(output_y, coord_out.zy, grad_y1, VXC_MODIFIER(0, 5, 0, VXC_RM_TowardZero, 0));
        coord_out.y++;
    }
}
#endif
